import time


class Room:
    def __init__(self,lista):
        self.__plats=int(lista[0])
        self.__w=int(lista[1])
        self.__n=int(lista[2])
        self.__e=int(lista[3])
        self.__s=int(lista[4])
        self.__object=(lista[5])
        self.__info=(lista[6])
        
    def get_info(self):
        return self.__info
    
    def get_object(self):
        return self.__object
    
    def get_w(self):
        return self.__w
    
    def get_n(self):
        return self.__n
    
    def get_e(self):
        return self.__e
    
    def get_s(self):
        return self.__s
    
    def get_plats(self):
        return self.__plats
    
    def set_info(self,new):
        self.__info=new
    
    def set_object(self,new):
        self.__object=new
    
    def set_w(self,new):
        self.__w=new
    
    def set_n(self,new):
        self.__n=new
    
    def set_e(self,new):
        self.__e=new
    
    def set_s(self,new):
        self.__s=new
   
    def set_plats(self,new):
        self.__plats=new
        
    

def make_temp_dict(file):                  
    temp_dict = {}                   
    for line in file:
        new_line = line.strip('\n')
        lista = new_line.split(';')
        room = Room(lista)
        temp_dict[room.get_plats()] = room
    return temp_dict

def create_graph(temp_dict):               
    for v in temp_dict.values():           
        if v.get_n() != 0:
            v.set_n(temp_dict[v.get_n()])
        else:
            v.set_n(None)
        if v.get_s() != 0:
            v.set_s(temp_dict[v.get_s()])
        else:
            v.set_s(None)
        if v.get_e() != 0:
            v.set_e(temp_dict[v.get_e()])
        else:
            v.set_e(None)
        if v.get_w() != 0:
            v.set_w(temp_dict[v.get_w()])
        else:
            v.set_w(None)    
    
    
def nytt_rum(room):
    print(f"Du kommer in i  {room.get_plats()} och ser dig runt.")
    #time.sleep(3)
    print(f"Du ser ett antal dörrar")
    #time.sleep(1.5)
    if room.get_w() !=None:
        print(f"dörren till vänster leder till {room.get_w()}.")
    #time.sleep(1.5)
    if room.get_n() !=None:
        print(f"dörren åt norr leder till {room.get_n()}.")
    #time.sleep(1.5)
    if room.get_e() !=None:
        print(f"dörren till höger leder till {room.get_e()}.")
    #time.sleep(1.5)
    if room.get_s() !=None:
        print(f"dörren åt söder leder till {room.get_s()}.")
    #time.sleep(1.5)
    
    
    
    
def choice(room):
    global val
    while True:
        val=input(f"vill du gå till {room.get_w()} (1), {room.get_n()} (2), {room.get_e()}(3) eller {room.get_s()} (4)?")
        if val==str(1):
            print(f"du går in i {room.get_w()}.")
            new_location=location.get_w()
            return new_location
        elif val==str(2):
            print(f"du går in i {room.get_n()}.")
            new_location=location.get_n()
            return new_location
        elif val==str(3):
            print(f"du går in i {room.get_e()}.")
            new_location=location.get_e()
            return new_location
        elif val==str(4):
            print(f"du går in i {room.get_s()}.")
            new_location=location.get_s()
            return new_location
        else:
            print("Inget alternativ valt, försök igen.")



file = open('roominfo.txt','r')
temp_dict = make_temp_dict(file)            
create_graph (temp_dict)                    
location = temp_dict[1]
print("intromeddelande: blah blah blah blah blah blah blah")
nytt_rum(location)
choice(location)


while True:
    nytt_rum(location)
    location=choice(location)
